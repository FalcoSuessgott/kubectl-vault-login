{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kubectl-vault-login","text":"<p>A <code>kubectl</code> plugin for obtaining a access to a <code>Kubernetes</code> cluster via HashiCorp Vaults Kubernetes Secret Engine</p>"},{"location":"guide/01-create-sa-token/","title":"01: Generate a service account token for a pre-existing service account","text":""},{"location":"guide/01-create-sa-token/#kind","title":"kind","text":"<pre><code>kind create cluster --config=kind-config.yml\n</code></pre>"},{"location":"guide/01-create-sa-token/#sa-token-vault-auth-token-ued-by-vault-that-is-allowed-to-create-service-account-tokens","title":"SA token (vault-auth) + token ued by vault that is allowed to create service account tokens","text":"<pre><code>kubectl apply -f vault-auth.yml\n</code></pre>"},{"location":"guide/01-create-sa-token/#vault","title":"Vault","text":"<pre><code>vault server \\\n    -dev \\\n    -dev-listen-address=0.0.0.0:8200 \\\n    -dev-root-token-id=root\n</code></pre>"},{"location":"guide/01-create-sa-token/#configure-vault","title":"Configure vault","text":"<pre><code>K8S_JWT_TOKEN=$(kubectl get secret vault-auth-token -o jsonpath=\"{.data.token}\" | base64 -d)\nK8S_CA_CERT=$(kubectl get secret vault-auth-token -o jsonpath=\"{['data']['ca\\.crt']}\" | base64 -d)\nvault secrets enable kubernetes\nvault write -f kubernetes/config \\\n    kubernetes_host=\"https://127.0.0.1:6443\" \\\n    kubernetes_ca_cert=\"$K8S_CA_CERT\" \\\n    service_account_jwt=\"$K8S_JWT_TOKEN\"\nvault write kubernetes/roles/test \\\n    allowed_kubernetes_namespaces=\"default\" \\\n    service_account_name=\"tmp-sa\" \\\n    token_default_ttl=\"10m\"\n</code></pre>"},{"location":"guide/01-create-sa-token/#create-a-pod-to-show-we-can-list-pods","title":"create a pod to show we can list pods","text":"<pre><code>kubectl run nginx --image=nginx\n</code></pre>"},{"location":"guide/01-create-sa-token/#fetch-credentials","title":"fetch credentials","text":"<pre><code>kubectl apply -f tmp-sa.yml\ntoken=$(vault write -field=service_account_token \\\n    kubernetes/creds/test \\\n    ttl=20m)\ncurl -H \"Authorization: Bearer $token\" -sk $(kubectl config view --minify -o 'jsonpath={.clusters[].cluster.server}')/api/v1/namespaces/default/pods | jq .\n</code></pre>"},{"location":"guide/01-create-sa-token/#example-kubeconfig","title":"example kubeconfig","text":"<pre><code>kind get kubeconfig &gt; vault-kubeconfig.yml\n</code></pre> <pre><code># vault-kubeconfig.yml\n[...]\nusers:\n- name: kind-kind\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1beta1\n      command: ./exec.sh\n      env:\n        - name: VAULT_ROLE\n          value: test\n        - name: TTL\n          value: 20m\n</code></pre>"},{"location":"guide/01-create-sa-token/#example-exec-script","title":"Example exec script:","text":"<pre><code>#!/usr/bin/env bash\ncat &lt;&lt;EOF\n{\n  \"apiVersion\": \"client.authentication.k8s.io/v1beta1\",\n  \"kind\": \"ExecCredential\",\n  \"status\": {\n    \"token\": \"$(vault write -format=json -field=service_account_token kubernetes/creds/\"${VAULT_ROLE}\" ttl=\"${TTL}\" | jq -r .)\"\n  }\n}\nEOF\n</code></pre> <p>SA works for namespace default:</p> <pre><code>KUBECONFIG=vault-kubeconfig.yml k get po\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          15m\n</code></pre> <p>but not for kube-system:</p> <pre><code>KUBECONFIG=vault-kubeconfig.yml k get po -n kube-config\nError from server (Forbidden): pods is forbidden: User \"system:serviceaccount:default:tmp-sa\" cannot list resource \"pods\" in API group \"\" in the namespace \"kube-config\"\n</code></pre>"},{"location":"guide/01-create-sa-token/#teardown","title":"teardown","text":"<pre><code>kind delete cluster\nkill -9 $(pgrep -x vault)\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/","title":"02: Generate a Kubernetes role, role binding, service account and token","text":""},{"location":"guide/02-create-sa-sa-token-role-binding/#kind","title":"kind","text":"<pre><code>kind create cluster --config=kind-config.yml\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#sa-token-vault-auth-token-ued-by-vault-that-is-allowed-to-create-service-account-tokens","title":"SA token (vault-auth) + token ued by vault that is allowed to create service account tokens","text":"<pre><code>kubectl apply -f vault-auth.yml\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#vault","title":"Vault","text":"<pre><code>vault server \\\n    -dev \\\n    -dev-listen-address=0.0.0.0:8200 \\\n    -dev-root-token-id=root\n</code></pre> <p>Kubernetes prevents users (including service accounts) from granting RBAC permissions they do not already have themselves</p>"},{"location":"guide/02-create-sa-sa-token-role-binding/#configure-vault","title":"Configure vault","text":"<pre><code>K8S_JWT_TOKEN=$(kubectl get secret vault-auth-token -o jsonpath=\"{.data.token}\" | base64 -d)\nK8S_CA_CERT=$(kubectl get secret vault-auth-token -o jsonpath=\"{['data']['ca\\.crt']}\" | base64 -d)\nvault secrets enable kubernetes\nvault write -f kubernetes/config \\\n    kubernetes_host=\"https://127.0.0.1:6443\" \\\n    kubernetes_ca_cert=\"$K8S_CA_CERT\" \\\n    service_account_jwt=\"$K8S_JWT_TOKEN\"\nvault write kubernetes/roles/test \\\n    allowed_kubernetes_namespaces=\"default\" \\\n    kubernetes_role_name=\"role-list-pods\" \\\n    token_default_ttl=\"10m\"\n\nvault write \\\n    kubernetes/creds/test \\\n    ttl=20m\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#create-a-pod-to-show-we-can-list-pods","title":"create a pod to show we can list pods","text":"<pre><code>kubectl run nginx --image=nginx\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#fetch-credentials","title":"fetch credentials","text":"<pre><code>kubectl apply -f tmp-sa.yml\ntoken=$(vault write -field=service_account_token \\\n    kubernetes/creds/test \\\n    kubernetes_namespace=default \\\n    ttl=20m)\ncurl -H \"Authorization: Bearer $token\" -sk $(kubectl config view --minify -o 'jsonpath={.clusters[].cluster.server}')/api/v1/namespaces/default/pods | jq .\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#example-kubeconfig","title":"example kubeconfig","text":"<pre><code>kind get kubeconfig &gt; vault-kubeconfig.yml\n</code></pre> <pre><code># vault-kubeconfig.yml\n[...]\nusers:\n- name: kind-kind\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1beta1\n      command: ./exec.sh\n      env:\n        - name: VAULT_ROLE\n          value: test\n        - name: K8S_NAMESPACE\n          value: default\n        - name: TTL\n          value: 20m\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#example-exec-script","title":"Example exec script:","text":"<pre><code>#!/usr/bin/env bash\ncat &lt;&lt;EOF\n{\n  \"apiVersion\": \"client.authentication.k8s.io/v1beta1\",\n  \"kind\": \"ExecCredential\",\n  \"status\": {\n    \"token\": \"$(vault write -format=json -field=service_account_token kubernetes/creds/\"${VAULT_ROLE}\" kubernetes_namespace=\"${K8S_NAMESPACE}\" ttl=\"${TTL}\" | jq -r .)\"\n  }\n}\nEOF\n</code></pre> <p>SA works for namespace default:</p> <pre><code>KUBECONFIG=vault-kubeconfig.yml k get po\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          15m\n</code></pre> <p>but not for kube-system:</p> <pre><code>KUBECONFIG=vault-kubeconfig.yml k get po -n kube-config\nError from server (Forbidden): pods is forbidden: User \"system:serviceaccount:default:tmp-sa\" cannot list resource \"pods\" in API group \"\" in the namespace \"kube-config\"\n</code></pre>"},{"location":"guide/02-create-sa-sa-token-role-binding/#teardown","title":"teardown","text":"<pre><code>kind delete cluster\nkill -9 $(pgrep -x vault)\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/","title":"01: Generate a service account and a token, and bind a pre-existing Kubernetes role","text":""},{"location":"guide/03-create-sa-sa-token-role-role-binding/#kind","title":"kind","text":"<pre><code>kind create cluster --config=kind-config.yml\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#sa-token-vault-auth-token-ued-by-vault-that-is-allowed-to-create-service-account-tokens","title":"SA token (vault-auth) + token ued by vault that is allowed to create service account tokens","text":"<pre><code>kubectl apply -f vault-auth.yml\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#vault","title":"Vault","text":"<pre><code>vault server \\\n    -dev \\\n    -dev-listen-address=0.0.0.0:8200 \\\n    -dev-root-token-id=root\n</code></pre> <p>Kubernetes prevents users (including service accounts) from granting RBAC permissions they do not already have themselves The \"escalate\" verb allows a user to grant roles with more privileges than they themselves have. The \"bind\" verb allows a user (or service account) to assign an existing Role or ClusterRole to subjects (users, groups, or service accounts) by creating RoleBindings or ClusterRoleBindings.</p>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#configure-vault","title":"Configure vault","text":"<pre><code>K8S_JWT_TOKEN=$(kubectl get secret vault-auth-token -o jsonpath=\"{.data.token}\" | base64 -d)\nK8S_CA_CERT=$(kubectl get secret vault-auth-token -o jsonpath=\"{['data']['ca\\.crt']}\" | base64 -d)\nvault secrets enable kubernetes\nvault write -f kubernetes/config \\\n    kubernetes_host=\"https://127.0.0.1:6443\" \\\n    kubernetes_ca_cert=\"$K8S_CA_CERT\" \\\n    service_account_jwt=\"$K8S_JWT_TOKEN\"\nvault write kubernetes/roles/test \\\n    allowed_kubernetes_namespaces=\"default\" \\\n    generated_role_rules=\"$(jq -c . tmp.json)\" \\\n    token_default_ttl=\"10m\"\n\nvault write \\\n    kubernetes/creds/test \\\n    ttl=20m\n</code></pre> <pre><code>#generated_role_rules=\"rules:\\n- apiGroups: [\\\"\\\"]\\n  resources: [\\\"pods\\\"]\\n  verbs: [\\\"list\\\"]\" \\\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#create-a-pod-to-show-we-can-list-pods","title":"create a pod to show we can list pods","text":"<pre><code>kubectl run nginx --image=nginx\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#fetch-credentials","title":"fetch credentials","text":"<pre><code>token=$(vault write -field=service_account_token \\\n    kubernetes/creds/test \\\n    kubernetes_namespace=default \\\n    ttl=20m)\ncurl -H \"Authorization: Bearer $token\" -sk $(kubectl config view --minify -o 'jsonpath={.clusters[].cluster.server}')/api/v1/namespaces/default/pods | jq .\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#example-kubeconfig","title":"example kubeconfig","text":"<pre><code>kind get kubeconfig &gt; vault-kubeconfig.yml\n</code></pre> <pre><code># vault-kubeconfig.yml\n[...]\nusers:\n- name: kind-kind\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1beta1\n      command: ./exec.sh\n      env:\n        - name: VAULT_ROLE\n          value: test\n        - name: K8S_NAMESPACE\n          value: default\n        - name: TTL\n          value: 20m\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#example-exec-script","title":"Example exec script:","text":"<pre><code>#!/usr/bin/env bash\ncat &lt;&lt;EOF\n{\n  \"apiVersion\": \"client.authentication.k8s.io/v1beta1\",\n  \"kind\": \"ExecCredential\",\n  \"status\": {\n    \"token\": \"$(vault write -format=json -field=service_account_token kubernetes/creds/\"${VAULT_ROLE}\" kubernetes_namespace=\"${K8S_NAMESPACE}\" ttl=\"${TTL}\" | jq -r .)\"\n  }\n}\nEOF\n</code></pre> <p>SA works for namespace default:</p> <pre><code>KUBECONFIG=vault-kubeconfig.yml k get po\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          15m\n</code></pre> <p>but not for kube-system:</p> <pre><code>KUBECONFIG=vault-kubeconfig.yml k get po -n kube-config\nError from server (Forbidden): pods is forbidden: User \"system:serviceaccount:default:tmp-sa\" cannot list resource \"pods\" in API group \"\" in the namespace \"kube-config\"\n</code></pre>"},{"location":"guide/03-create-sa-sa-token-role-role-binding/#teardown","title":"teardown","text":"<pre><code>kind delete cluster\nkill -9 $(pgrep -x vault)\n</code></pre>"}]}